<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">

	<!-- 배너 이미지 존재 여부 확인 -->
	<select id="checkBanner" resultType='Image'>
		select *
		from image
		where img_ref_type = 'BANNER' and img_ref_num = #{i}
	</select>

	<!-- 한눈에 보기 이미지 존재 여부 확인 -->
	<select id="checkOneeye" resultType='Image'>
		select *
		from image
		where img_ref_type = 'ONEEYE' and img_ref_num = #{i}
	</select>

	<!-- 동물 게시물 수 조회 -->
	<select id="getAnimalCount" resultType="int">
		select count(*) from
		ANIMAL
	</select>
	<!-- 동물 게시물 수 조회 -->

	<!-- 동물 게시글 목록 조회 -->
	<select id="selectFamilyList" resultMap="AnimalList">
		SELECT * FROM animal
		ORDER BY ANI_NO ASC
	</select>
	<!-- 동물 게시글 목록 조회 -->
	
	<resultMap type="Animal" id="AnimalList">
        <id column="ANI_NO" property="aniNO"/>
        <result column="ANMAL_CLASS" property="animalClass"/>
        <result column="ANIMAL_FAMILY" property="animalFamily"/>
        <result column="ANIMAL_NAME" property="animalName"/>
        <result column="ENTER_DATE" property="enterDate"/>
        <result column="EXTINCT_GRADE" property="extinctGrade"/>
        <result column="UPLOAD_DATE" property="uploadDate"/>
	</resultMap>

	<!-- 동물 정보 조회 -->
	<select id="selectAnimal" resultMap="AnimalList" parameterType="int">
		SELECT * FROM ANIMAL WHERE ANI_NO = #{aniNO}
	</select>
	<!-- 동물 정보 조회 -->

	<!-- 동물 추가 -->
	<insert id="insertAnimal" parameterType="Animal"
		useGeneratedKeys="true" keyProperty="aniNO">
		<selectKey keyProperty="aniNO" resultType="int"
			order="BEFORE">
			SELECT seq_animal.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO ANIMAL (ANI_NO, ANMAL_CLASS, ANIMAL_FAMILY, ANIMAL_NAME,
		ENTER_DATE, EXTINCT_GRADE, UPLOAD_DATE)
		VALUES (#{aniNO}, #{animalClass}, #{animalFamily}, #{animalName}, SYSDATE,
		#{extinctGrade}, SYSDATE)
	</insert>
	<!-- 동물 추가 -->

	<!-- 동물 정보 수정 -->
	<update id="updateAnimal" parameterType="Animal">
		UPDATE ANIMAL
		SET ANMAL_CLASS = #{animalClass}, ANIMAL_FAMILY = #{animalFamily},
		ANIMAL_NAME = #{animalName}, EXTINCT_GRADE = #{extinctGrade}
		WHERE ANI_NO = #{aniNO}
	</update>
	<!-- 동물 정보 수정 -->

	<!-- 동물 삭제 + ( ) 는 체크박스를 여러개 체크시 함께 삭제를 위한 코드입니다. -->
	<delete id="deleteAnimal" parameterType="list">
		DELETE FROM ANIMAL
		WHERE ANI_NO IN
		<foreach collection="list" item="aniNO" open="(" separator=","
			close=")">#{aniNO}</foreach>
	</delete>
	<!-- 동물 삭제 + ( ) 는 체크박스를 여러개 체크시 함께 삭제를 위한 코드입니다. -->

	<!-- 동물 사진 추가 -->
	<insert id="insertSingleImage" parameterType="Image">
		INSERT INTO Image
		(IMG_NO, IMG_PATH, IMG_NAME, IMG_RENAME, IMG_REF_NUM, IMG_REF_TYPE,
		IMG_ACTIVE)
		VALUES (new_img_id, #{imgPath}, #{imgName}, #{imgRename}, #{imgRefNum},
		#{imgRefType}, default)
	</insert>
	<!-- 동물 사진 추가 -->

	<!-- 동물수정페이지에서 동물 보이기 -->
	<select id="selectAnimalImage" resultType="Image">
		SELECT *
		FROM Image
		WHERE IMG_REF_NUM = #{aniNO} AND IMG_REF_TYPE = 'ANIMAL' AND IMG_ACTIVE =
		'Y'
		ORDER BY IMG_NO DESC FETCH FIRST 1 ROW ONLY
	</select>
	<!-- 동물수정페이지에서 동물 보이기 -->

	<!-- 맨 처음 수정창에 기본이미지 뜨게하기 -->
	<update id="deactivateOldAnimalImage">
		UPDATE Image
		SET IMG_ACTIVE = 'N'
		WHERE IMG_REF_NUM = #{aniNO} AND IMG_REF_TYPE = 'ANIMAL'
	</update>
	<!-- 맨 처음 수정창에 기본이미지 뜨게하기 -->

	<!-- 동물 이미지 수정 -->
	<update id="updateAnimalImage" parameterType="Image">
		UPDATE Image SET IMG_REF_NUM = #{imgRefNum} WHERE IMG_NO = #{imgNo}
	</update>
	<!-- 동물 이미지 수정 -->

	<!-- 마스코트 목록 조회 -->
	<select id="selectMascotList" resultMap="goodsResultMap">
		SELECT * FROM GOODS
		ORDER BY GOODS_NO
	</select>
	<!-- 마스코트 목록 조회 -->
	
	<!-- 특정 상품 정보 가져오기 -->
	<select id="selectGoods" parameterType="int" resultMap="goodsResultMap">
		SELECT * FROM GOODS WHERE GOODS_NO = #{goodsNo}
	</select>
	<!-- 특정 상품 정보 가져오기 -->
	
	<!-- 상품 정보 업데이트 -->
	<update id="updateGoods" parameterType="Goods">
		UPDATE GOODS 
		SET GOODS_NAME = #{goodsName}, GOODS_PRICE = #{goodsPrice}, GOODS_INFO = #{goodsInfo} 
		WHERE GOODS_NO = #{goodsNo}
	</update>
	<!-- 상품 정보 업데이트 -->
	
	<!-- 상품 삭제 -->
	<delete id="deleteGoods" parameterType="int">
		DELETE FROM GOODS 
		WHERE GOODS_NO = #{goodsNo}
	</delete>
	<!-- 상품 삭제 -->
	
	<!-- 새 상품 추가 -->
	<insert id="insertGoods" parameterType="Goods" useGeneratedKeys="true" keyProperty="goodsNo">
		<selectKey keyProperty="goodsNo" resultType="int" order="BEFORE">
			SELECT SEQ_GOODS.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO GOODS (GOODS_NO, GOODS_NAME, GOODS_PRICE, GOODS_INFO)
		VALUES (#{goodsNo}, #{goodsName}, #{goodsPrice}, #{goodsInfo})
	</insert>
	<!-- 새 상품 추가 -->
	
	<!-- 이미지 추가 -->
	<insert id="insertGoodsImage" parameterType="Image">
		<selectKey keyProperty="imgNo" resultType="int"
			order="BEFORE">SELECT SEQ_IMG.NEXTVAL FROM DUAL</selectKey>
		INSERT INTO IMAGE (IMG_NO, IMG_PATH, IMG_NAME, IMG_RENAME,
		IMG_REF_NUM, IMG_REF_TYPE, IMG_ACTIVE) VALUES (#{imgNo}, #{imgPath},
		#{imgName}, #{imgRename}, #{imgRefNum}, #{imgRefType}, 'Y')
	</insert>
	<!-- 이미지 추가 -->
	
	<!-- Goods 결과 매핑 -->
	<resultMap id="goodsResultMap" type="Goods">
		<id property="goodsNo" column="GOODS_NO" />
		<result property="goodsName" column="GOODS_NAME" />
		<result property="goodsPrice" column="GOODS_PRICE" />
		<result property="goodsInfo" column="GOODS_INFO" />
	</resultMap>

	<!-- 마스코트 이미지 수정 -->
	<update id="updateMascotImage" parameterType="Image">
		MERGE INTO Image 
		i USING (SELECT 1 FROM DUAL) 
		d ON (i.IMG_REF_TYPE = 'MASCOT') 
		WHEN MATCHED THEN UPDATE 
		SET i.IMG_PATH = #{imgPath},i.IMG_NAME = #{imgName}, i.IMG_RENAME = #{imgRename} 
		WHEN NOT MATCHED THEN INSERT (IMG_NO, IMG_PATH, IMG_NAME, IMG_RENAME, IMG_REF_TYPE, IMG_ACTIVE) VALUES (new_img_id, #{imgPath}, #{imgName}, #{imgRename}, 'MASCOT', 'Y')
	</update>

	<!-- 상품 이미지 수정 -->
	<update id="updateGoodsInfoImage" parameterType="Image">
		MERGE INTO Image 
		i USING (SELECT 1 FROM DUAL) 
		d ON (i.IMG_REF_TYPE = 'GOODS_INFO') 
			WHEN MATCHED THEN UPDATE 
				SET i.IMG_PATH = #{imgPath}, i.IMG_NAME = #{imgName}, i.IMG_RENAME = #{imgRename} 
			WHEN NOT MATCHED THEN INSERT (IMG_NO, IMG_PATH, IMG_NAME, IMG_RENAME, IMG_REF_TYPE, IMG_ACTIVE) 
				VALUES (new_img_id, #{imgPath}, #{imgName}, #{imgRename}, 'GOODS_INFO', 'Y')
	</update>
	<!-- 상품 이미지 수정 -->

	<!-- 마스코트 이미지 조회 -->
	<select id="getMascotImage" resultType="Image">
		SELECT * FROM Image WHERE IMG_REF_TYPE = 'MASCOT' AND IMG_ACTIVE = 'Y'
	</select>
	<!-- 마스코트 이미지 조회 -->

	<!-- 상품 이미지 조회 -->
	<select id="getGoodsInfoImage" resultType="Image">
		SELECT * FROM Image WHERE IMG_REF_TYPE = 'GOODS_INFO' AND IMG_ACTIVE = 'Y'
	</select>
	<!-- 상품 이미지 조회 -->

	<!-- family 페이지 조회 -->
	<select id="getAnimalByClass" resultType="Animal">
		SELECT a.*, 
		CASE WHEN i.IMG_PATH IS NOT NULL AND i.IMG_RENAME IS NOT NULL
				THEN i.IMG_PATH || '/' || i.IMG_RENAME ELSE NULL END 
			as imagePath FROM ANIMAL a 
				LEFT JOIN IMAGE i ON a.ANI_NO = i.IMG_REF_NUM 
				WHERE a.ANMAL_CLASS = #{animalClass} AND i.IMG_REF_TYPE = 'ANIMAL' AND i.IMG_ACTIVE = 'Y' 
			ORDER BY a.ANI_NO
	</select>
	<!-- family 페이지 조회 -->

	<!-- 마스코트 페이지 조회 -->
	<select id="getMascotGoods" resultType="Goods">
		select * from GOODS
	</select>
	<!-- 마스코트 페이지 조회 -->

	<!-- 마스코트 수정창에 이미지 출력 -->
	<select id="selectGoodsImage" resultType="Image">
		SELECT * FROM Image 
			WHERE IMG_REF_NUM = #{goodsNo} AND IMG_REF_TYPE = 'GOODS' AND IMG_ACTIVE = 'Y' 
			ORDER BY IMG_NO DESC FETCH FIRST 1 ROW ONLY
	</select>
	<!-- 마스코트 수정창에 이미지 출력 -->

	<!-- 마스코트 이미지 비활성화 -->
	<update id="deactivateOldGoodsImage">
		UPDATE Image 
			SET IMG_ACTIVE = 'N' 
			WHERE IMG_REF_NUM = #{goodsNo} AND IMG_REF_TYPE = 'GOODS'
	</update>
	<!-- 마스코트 이미지 비활성화 -->

	<!-- 마스코트 페이지에 상품리스트들 -->
	<select id="getMascotGoodsWithImages" resultMap="goodsWithImageResultMap">
		SELECT g.*, i.IMG_PATH, i.IMG_RENAME 
			FROM GOODS g 
			LEFT JOIN IMAGE i ON g.GOODS_NO = i.IMG_REF_NUM AND i.IMG_REF_TYPE = 'GOODS' AND i.IMG_ACTIVE = 'Y' 
			ORDER BY g.GOODS_NO
	</select>
	<!-- 마스코트 페이지에 상품리스트들 -->

	<resultMap id="goodsWithImageResultMap" type="Goods">
		<id property="goodsNo" column="GOODS_NO" />
		<result property="goodsName" column="GOODS_NAME" />
		<result property="goodsPrice" column="GOODS_PRICE" />
		<result property="goodsInfo" column="GOODS_INFO" />
		<result property="imagePath" column="IMG_PATH" />
		<result property="imageRename" column="IMG_RENAME" />
	</resultMap>

	<!-- 배너/한눈에보기 이미지 업데이트 -->
	<update id="updateMainImg">
		update image
		set img_path = #{imgPath}, img_name = #{imgName}, img_Rename =
		#{imgRename}
		where img_ref_num = #{imgRefNum} and img_ref_type = #{imgRefType}
	</update>
	<!-- 배너/한눈에보기 이미지 업데이트 -->

	<!-- 배너/한눈에보기 이미지 저장 -->
	<insert id="insertMainImg">
		insert into image
		values(seq_img.nextval, #{imgPath}, #{imgName}, #{imgRename}, #{imgRefNum}, #{imgRefType},
		default, #{imgRefHover})
	</insert>
	<!-- 배너/한눈에보기 이미지 저장 -->

	<!-- 메인 화면 : 배너 이미지 -->
	<select id="getBannerImg" resultType='image'>
		select *
		from image
		where img_ref_type = 'BANNER'
	</select>
	<!-- 메인 화면 : 배너 이미지 -->

	<!-- 메인 화면 : 한눈에보기 이미지 -->
	<select id="getOneeyeImg" resultType='image'>
		select *
		from image
		where img_ref_type = 'ONEEYE'
	</select>
	<!-- 메인 화면 : 한눈에보기 이미지 -->

	<!-- 메인 화면 : 배너 링크 -->
	<select id="getBannerLink" resultType='Link'>
		select *
		from link
		where link_ref_type = 'BANNER'
	</select>
	<!-- 메인 화면 : 배너 링크 -->

	<!-- 메인 화면 : 한눈에보기 링크 -->
	<select id="getOneeyeLink" resultType='Link'>
		select *
		from link
		where link_ref_type = 'ONEEYE'
	</select>
	<!-- 메인 화면 : 배한눈에보기너 링크 -->

	<!-- 배너/한눈에보기 링크 수정 -->
	<update id="updateMainLink">
		update Link
		set link_url = #{linkUrl}
		where link_ref_num = #{linkRefNum} and link_ref_type = #{linkRefType}
	</update>
	<!-- 배너/한눈에보기 링크 수정 -->

	<!-- 배너/한눈에보기 링크 추가 -->
	<insert id="insertMainLink">
		insert into link
		values(seq_link.nextval, #{linkUrl}, null, #{linkRefType}, #{linkRefNum})
	</insert>
	<!-- 배너/한눈에보기 링크 추가 -->

	<!-- 프로그램 글 목록 수 조회 -->
	<select id="getShowListCount" resultType='_int'>
		select count(*)
		from show
	</select>
	<!-- 프로그램 글 목록 수 조회 -->

	<!-- 프로그램 글 목록 조회 -->
	<select id="getShowList" resultType='Show'>
		select *
		from show
		order by show_no desc
	</select>
	<!-- 프로그램 글 목록 수 조회 -->

	<!-- 프로그램 추가 -->
	<insert id="insertShow">
		<selectKey order="BEFORE" keyProperty="showNo"
			resultType="_int">
			select seq_show.nextval from dual
		</selectKey>
		insert into show
		values(#{showNo}, #{showName}, #{showContent}, sysdate)
	</insert>
	<!-- 프로그램 추가 -->

	<!-- 프로그램 상세 보기 -->
	<select id="getShow" resultType='Show'>
		select *
		from show
		where show_no = #{showNo}
	</select>
	<!-- 프로그램 상세 보기 -->

	<!-- 프로그램 상세 이미지 보기 -->
	<select id="getImg" resultType="Image">
		select *
		from image
		where img_ref_num = #{imgRefNum} and img_ref_type = #{imgRefType} and
		img_ref_hover = #{imgRefHover}
	</select>
	<!-- 프로그램 상세 이미지 보기 -->

	<!-- 프로그램 삭제 -->
	<delete id="deleteShow">
		delete from show
		where show_no = #{showNo}
	</delete>
	<!-- 프로그램 삭제 -->

	<!-- 프로그램 이미지 삭제 -->
	<delete id="deleteShowImg">
		delete from image
		where img_ref_num = #{showNo} and img_ref_type = #{imgRefType} and
		img_ref_hover = #{imgRefHover}
	</delete>
	<!-- 프로그램 이미지 삭제 -->

	<!-- 이미지 리스트 가져오기 -->
	<select id="getImgList" resultType='Image'>
		select *
		from image
		where img_ref_num = #{showNo} and img_ref_type = 'SHOW'
	</select>
	<!-- 이미지 리스트 가져오기 -->

	<!-- 프로그램 수정 -->
	<update id="updateShow">
		update show
		set show_name = #{showName}, show_content = #{showContent}
		where show_no = #{showNo}
	</update>
	<!-- 프로그램 수정 -->

	<!-- 프로그램 이미지 수정 -->
	<update id="updateShowImg">
		update image
		set img_name = #{image.imgName}, img_path = #{image.imgPath}, img_rename
		= #{image.imgRename}
		where img_rename = #{deleteImg}
	</update>
	<!-- 프로그램 이미지 수정 -->

	<!-- 게시글 수 조회 -->
	<select id="getListCount" resultType="_int">
		select count(*) from board where board_active = 'Y' and cate_no = #{i}
	</select>
	<!-- 게시글 수 조회 -->

	<!-- 공지사항 게시글 수 조회 -->
	<select id="getNoListCount" resultType="_int">
		select count(*) from NOTICE_BOARD_VIEW where board_active = 'Y' and cate_no
		= #{i}
	</select>
	<!-- 공지사항 게시글 수 조회 -->

	<!-- 공지사항 게시글 리스트 조회 -->
	<select id="selectNoBoardList" resultMap="noBoard">
		select * from NOTICE_BOARD_VIEW where board_active = 'Y' and cate_no = #{i}
		order by board_no desc
	</select>
	<!-- 공지사항 게시글 리스트 조회 -->

	<resultMap type="Board" id="noBoard">
		<result column="WRITER_NO" property="boardWriterNo" />
		<result column="NO_SUBJECT" property="noSubject" />
		<result column="WRITER_NAME" property="boardWriterName" />
		<result column="MODIFY_DATE" property="boardModifyDate" />
		<result column="CREATE_DATE" property="boardCreateDate" />
	</resultMap>

	<!-- 문의/예약 게시글 리스트 조회 -->
	<select id="selectAllQueBookList" resultMap="quBoBoard">
		select * from in_bo_board_view where board_active = 'Y' and cate_no = #{i}
		order by board_no desc
	</select>
	<!-- 문의/예약 게시글 리스트 조회 -->

	<resultMap type="Board" id="quBoBoard">
		<result column="WRITER_NO" property="boardWriterNo" />
		<result column="WRITER_NAME" property="boardWriterName" />
		<result column="MODIFY_DATE" property="boardModifyDate" />
		<result column="CREATE_DATE" property="boardCreateDate" />
		<result column="IN_BO_STATUS" property="quBoBoardStatus" />
	</resultMap>

	<!-- 후기리스트 게시글 리스트 조회 -->
	<select id="selectReBoardList" resultMap="reBoard">
		select * from board where board_active = 'Y' and cate_no = #{i} order by
		board_no desc
	</select>
	<resultMap type="Board" id="reBoard">
		<result column="BOARD_WRITER_NO" property="boardWriterNo" />
		<result column="BOARD_WRITER_NAME" property="boardWriterName" />
		<result column="MODIFY_DATE" property="boardModifyDate" />
		<result column="CREATE_DATE" property="boardCreateDate" />
	</resultMap>
	<!-- 후기리스트 게시글 리스트 조회 -->

	<!-- 예약리스크 게시글 리스트 조회 -->
	<select id="selectBoardList" resultType="Board">
		select * from board where board_active = 'Y' and cate_no = #{i} order by
		board_no desc
	</select>
	<!-- 예약리스크 게시글 리스트 조회 -->

	<!-- 공지사항 상세 글 조회 -->
	<select id="selectNoBoard" resultMap="noBoard">
		select * from NOTICE_BOARD_VIEW where board_no = #{bId}
	</select>
	<!-- 공지사항 상세 글 조회 -->

	<!-- 게시글 카운트 업데이트 (조회수 증가용) -->
	<update id="updateCount">
		update board set BOARD_COUNT = BOARD_COUNT + 1 WHERE BOARD_NO = #{bId}
	</update>
	<!-- 게시글 카운트 업데이트 (조회수 증가용) -->

	<!-- 게시글 이미지 조회 -->
	<select id="selectImg" resultType="Image">
		select * from image where img_ref_num = #{bId} and img_ref_type = 'BOARD'
	</select>
	<!-- 게시글 이미지 조회 -->

	<!-- 문의/예약 상세 글 조회 -->
	<select id="selectQuBoBoard" resultMap="quBoBoard">
		select * from IN_BO_BOARD_VIEW where board_no = #{bId}
	</select>

	<!-- 말머리 필터 게시글 수 조회 -->
	<select id="listSubjectCount" resultType="_int">
		select count(*) from NOTICE_BOARD_VIEW where board_active = 'Y' and
		no_subject = #{noSubject}
	</select>
	<!-- 말머리 필터 게시글 수 조회 -->

	<!-- 말머리 필터 게시글 리스트 조회 -->
	<select id="searchFilter" resultMap="noBoard">
		select * from NOTICE_BOARD_VIEW where board_active = 'Y' and no_subject =
		#{noSubject}
	</select>
	<!-- 말머리 필터 게시글 리스트 조회 -->

	<!-- 검색어 게시글 수 조회 -->
	<select id="listSearchCount" resultType="_int">
		select count(*) from board where cate_No = #{cateNo} and board_active
		= 'Y'
		<if test="condition == 'title'">and board_title like '%' || #{search} || '%'</if>
		<if test="condition == 'content'">and board_content like '%' || #{search} || '%'</if>
	</select>
	<!-- 검색어 게시글 수 조회 -->

	<!-- 공지사항 검색어 리스트 검색 -->
	<select id="searchNoBoard" resultMap="noBoard">
		select * from NOTICE_BOARD_VIEW
		<if test="cateNo == 100">join notice using(board_no)</if>
		where cate_No = #{cateNo} and board_active = 'Y'
		<if test="condition == 'title'">and board_title like '%' || #{search} || '%'</if>
		<if test="condition == 'content'">and board_content like '%' || #{search} || '%'</if>
		<if test="condition == 'writer'">and board_writer_name like '%' || #{search} || '%'</if>
	</select>
	<!-- 공지사항 검색어 리스트 검색 -->

	<!-- 후기리스트 검색어 리스트 조회 -->
	<select id="searchReBoard" resultMap="reBoard">
		select * from board where cate_No = #{cateNo} and board_active = 'Y'
		<if test="condition == 'title'">and board_title like '%' || #{search} || '%'</if>
		<if test="condition == 'content'">and board_content like '%' || #{search} || '%'</if>
		<if test="condition == 'writer'">and board_writer_name like '%' || #{search} || '%'</if>
	</select>
	<!-- 후기리스트 검색어 리스트 조회 -->

	<!-- 검색어에 맞는 글 리스트 조회(문의/예약) -->
	<select id="searchQuBoBoard" resultMap="quBoBoard">
		select * from in_bo_board_view where cate_No = #{cateNo} and
		board_active = 'Y'
		<if test="condition == 'title'">and board_title like '%' || #{search} || '%'</if>
		<if test="condition == 'phone'">and writer_phone like '%' || #{search} || '%'</if>
		<if test="condition == 'writer'">and writer_name like '%' || #{search} || '%'</if>
	</select>
	<!-- 검색어에 맞는 글 리스트 조회(문의/예약) -->

	<!-- 상세보기에서 게시글 삭제 -->
	<update id="deleteBoard">
		update board set board_active = 'N' where board_no = #{boardNo}
	</update>
	<!-- 상세보기에서 게시글 삭제 -->

	<!-- 게시글 삭제와 동시에 이미지도 삭제 -->
	<update id="updateImgStatus">
		update image set img_active = 'N' where img_ref_num = #{boardNo} and
		img_ref_type = 'BOARD'
	</update>
	<!-- 게시글 삭제와 동시에 이미지도 삭제 -->

	<!-- 기존 이미지 삭제 (이미지 찐 삭제) -->
	<delete id="deleteImg">
		delete from image where img_rename in
		<foreach collection="list" item="deleteImg" open="(" close=")"
			separator=", ">#{deleteImg}</foreach>
	</delete>
	<!-- 기존 이미지 삭제 (이미지 찐 삭제) -->

	<!-- 게시글 수정 - 문의/예약 글일 경 -->
	<update id="updateQuBo">
		update inquiry_book set in_bo_phone = #{writerPhone}, in_bo_pwd = #{boPwd}
		where board_no = #{boardNo}
	</update>
	<!-- 게시글 수정 - 문의/예약 글일 경 -->

	<!-- 게시글 수정 - 공지사항일 경우 -->
	<update id="updateNotice">
		update notice set no_subject = #{noSubject} where board_no = #{boardNo}
	</update>
	<!-- 게시글 수정 - 공지사항일 경우 -->

	<!-- 게시글 수정 - 게시글 정보 업데이트 -->
	<update id="updateBoard">
		update board set board_writer_name = #{boardWriterName}, board_title =
		#{boardTitle}, board_content = #{boardContent}, Modify_date = sysdate
		where board_no = #{boardNo}
	</update>
	<!-- 게시글 수정 - 게시글 정보 업데이트 -->

	<!-- 이미지 등록 -->
	<insert id="insertImg">
		insert all
		<foreach collection="list" item="img" separator=" ">
			into Image values(new_img_id, #{img.imgPath}, #{img.imgName},
			#{img.imgRename}, #{img.imgRefNum}, #{img.imgRefType}, default)
		</foreach>
		select * from dual
	</insert>
	<!-- 이미지 등록 -->

	<!-- 후기 리스트 상세 글 조회 -->
	<select id="selectReBoard" resultMap="reBoard">
		select * from REVIEW_BOARD_VIEW where board_no = #{bId}
	</select>
	<!-- 후기 리스트 상세 글 조회 -->

	<!-- 글쓰기 - 공지사항 -->
	<insert id="insertNo">
		insert into NOTICE values(#{boardNo}, #{noSubject})
	</insert>
	<!-- 글쓰기 - 공지사항 -->

	<!-- 글쓰기 - 문의사항/예약 -->
	<insert id="insertQuBo">
		insert into inquiry_book values(#{boardNo}, #{writerPhone}, default,
		#{boPwd})
	</insert>
	<!-- 글쓰기 - 문의사항/예약 -->

	<!-- 글쓰기 -->
	<insert id="insertBoard" useGeneratedKeys="true">
		<selectKey resultType="_int" keyProperty="boardNo"
			order="BEFORE">select seq_board.nextval from dual</selectKey>
		insert into board values(#{boardNo}, #{cateNo}, #{boardWriterNo},
		#{boardWriterName}, #{boardTitle}, #{boardContent}, default, default,
		sysdate, sysdate)
	</insert>
	<!-- 글쓰기 -->

	<!-- 체크 삭제 - 글 상태 변경 -->
	<update id="checkDelete">
		update board set board_active = 'N' where board_no = #{boardNo}
	</update>
	<!-- 체크 삭제 - 글 상태 변경 -->

	<!-- 체크 삭제 - 카테고리 번호 가져오기 -->
	<select id="getCategoryByBoardNo" resultType="_int">
		select cate_no from board where board_no = #{boardNoInt}
	</select>
	<!-- 체크 삭제 - 카테고리 번호 가져오기 -->

	<!-- 운영시간 이미지 조회 -->
	<select id="getOperatingImage" resultType="Image">
	    SELECT * FROM Image WHERE IMG_REF_TYPE = 'OPERATING' AND IMG_ACTIVE = 'Y'
	</select>
	<!-- 운영시간 이미지 조회 -->
	
	<!-- 이용요금 이미지 조회 -->
	<select id="getChargeImage" resultType="Image">
	    SELECT * FROM Image WHERE IMG_REF_TYPE = 'CHARGE' AND IMG_ACTIVE = 'Y'
	</select>
	<!-- 이용요금 이미지 조회 -->
	
	<!-- 운영시간 이미지 수정 -->
	<update id="updateOperatingImage" parameterType="Image">
	    MERGE INTO Image i
	    USING (SELECT 1 FROM DUAL) d
	    ON (i.IMG_REF_TYPE = 'OPERATING')
	    WHEN MATCHED THEN
	        UPDATE SET
	            i.IMG_PATH = #{imgPath},
	            i.IMG_NAME = #{imgName},
	            i.IMG_RENAME = #{imgRename}
	    WHEN NOT MATCHED THEN
	        INSERT (IMG_NO, IMG_PATH, IMG_NAME, IMG_RENAME, IMG_REF_TYPE, IMG_ACTIVE)
	        VALUES (SEQ_IMG.NEXTVAL, #{imgPath}, #{imgName}, #{imgRename}, 'OPERATING', 'Y')
	</update>
	<!-- 운영시간 이미지 수정 -->
	
	<!-- 이용시간 이미지 수정 -->
	<update id="updateChargeImage" parameterType="Image">
	    MERGE INTO Image i
	    USING (SELECT 1 FROM DUAL) d
	    ON (i.IMG_REF_TYPE = 'CHARGE')
	    WHEN MATCHED THEN
	        UPDATE SET
	            i.IMG_PATH = #{imgPath},
	            i.IMG_NAME = #{imgName},
	            i.IMG_RENAME = #{imgRename}
	    WHEN NOT MATCHED THEN
	        INSERT (IMG_NO, IMG_PATH, IMG_NAME, IMG_RENAME, IMG_REF_TYPE, IMG_ACTIVE)
	        VALUES (SEQ_IMG.NEXTVAL, #{imgPath}, #{imgName}, #{imgRename}, 'CHARGE', 'Y')
	</update>
	<!-- 이용시간 이미지 수정 -->







</mapper>
